before_script:
  - apt update -qq
  - apt install -y git make

stages:
  - buildAndInstall
  - compileScripts
  - test
  - package

build&install-1804stockmono:
  image: ubuntu:18.04
  stage: buildAndInstall
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh
    - make
    - make install

build&install-2004stockmono:
  image: ubuntu:20.04
  stage: buildAndInstall
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh
    - make
    - make install

build&install-2004newmono:
  image: ubuntu:20.04
  stage: buildAndInstall
  script:
    - ./scripts/CI/install_mono_from_microsoft_deb_packages.sh

    - ./configure.sh
    - make
    - make install

buildScripts-1804stockmono:
  image: ubuntu:18.04
  stage: compileScripts
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh && make install
    - ./ci-build.fsx

buildScripts-2004stockmono:
  image: ubuntu:20.04
  stage: compileScripts
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh && make install
    - ./ci-build.fsx

buildScripts-2004newmono:
  image: ubuntu:20.04
  stage: compileScripts
  script:
    - ./scripts/CI/install_mono_from_microsoft_deb_packages.sh

    - ./configure.sh && make install
    - ./ci-build.fsx

test-1804stockmono:
  image: ubuntu:18.04
  stage: test
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh && make install
    - ./scripts/test.sh

test-2004stockmono:
  image: ubuntu:20.04
  stage: test
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh && make install
    - ./scripts/test.sh

test-2004newmono:
  image: ubuntu:20.04
  stage: test
  script:
    - ./scripts/CI/install_mono_from_microsoft_deb_packages.sh

    - ./configure.sh && make install
    - ./scripts/test.sh

package:
  image: ubuntu:20.04
  stage: package

  variables:
    # Fixes:
    # "Cannot connect to the Docker daemon. Is the docker daemon running on this host?"
    DOCKER_HOST: tcp://docker:2375
  services:
    # To support docker-in-docker
    - docker:dind

  script:
    - ./scripts/snap_build.sh

  artifacts:
    paths:
      - fsx*.snap
    expire_in: 50days
